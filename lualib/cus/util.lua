---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dell.
--- DateTime: 2020/11/24 下午5:49

local lfs1 = require("lfs")
local postman = require("cus.postman")

util = {}

string.split = function(s, p)
    local rt= {}
    string.gsub(s, '[^'..p..']+',
            function(w)
                table.insert(rt, w)
            end )
    return rt
end

--通过解析main.go来获取算法列表
function util.getPsdList(filename)
    local file = io.open(filename, "r")
    local psd_list = {}
    for line in io.lines(filename) do

        if  #line <= 0 or string.find(line, "SetMember") == nil then
            goto continue
        end

        local rt = string.split(line, ',')
        if #rt <= 0 or #rt[1] == 0 then
            goto continue
        end

        local rt1 = string.split(rt[1],'(')
        if  #rt <=1 or #rt1[2] == 0 then
            goto continue
        end

        local rt2 = string.split(rt1[2],'\"')
        if  #rt <= 0 or #rt2[1] == 0 then
            goto continue
        end
        table.insert(psd_list, rt2)
        ::continue::
    end
    file:close()
    return psd_list
end

function util.getPsgListByImgDir(img_dir)
    local psd_list = {}
    for file in lfs1.dir(img_dir)do
        if #file == 0 then
            goto continue
        end
        local psdname = string.split(file,'.')
        if #psdname == 0 or #psdname[1] == 0 then
            goto continue
        end
        table.insert(psd_list, psdname[1])
        ::continue::
    end
    return psd_list
end

function util.reqByPsdList(psd_list, api_prefix, img_prefix)
    ngx.say("<table>")
    ngx.say("<tr><td>reqUrl:</td><td>reqBody:</td><td>resPonse:</td></tr>")
    for k, v in pairs(psd_list) do
        local reqUrl = api_prefix .. v
        local reqBody = '{"logId":"sfsdfgdsfghhgfg","imgUrl":"' .. img_prefix .. v .. '.jpg"}'
        ngx.say("<tr>")
        ngx.say("<td>")
        ngx.say(reqUrl)
        ngx.say("</td>")
        ngx.say("<td>")
        ngx.say(reqBody)
        ngx.say("</td>")

        co = coroutine.create(postman.httpPost)
        coroutine.resume(co, reqUrl, reqBody)
        ngx.say("<tr>")
    end
    ngx.say("</table>")
end

--table 长度计算
function util.table_leng(t)
    local leng=0
    for k, v in pairs(t) do
        leng=leng+1
    end
    return leng;
end
return util